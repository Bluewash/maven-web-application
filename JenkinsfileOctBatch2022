node{

try{
    
    def mavenHome = tool name: 'maven3.8.6'
    
    echo "The Job name is: ${env.JOB_NAME}" 
    echo "The Build numebr is: ${env.BUILD_NUMBER}"
    echo "The node name is: ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])


//Checkout Code State
stage('CheckoutCode'){
sendSlackNotifications("STARTED")
git branch: 'master', credentialsId: '83e5eaa982b3d8b4916cbb1ff95fe9eb7ba6523e', url: 'https://github.com/Bluewash/maven-web-application.git'
}

//Build
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

 /*
//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//UploadArtifcats Into Nexus
stage('UploadArtifcatsIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy App into Tomcat Server
stage('DeployApp'){
sshagent(['83e5eaa982b3d8b4916cbb1ff95fe9eb7ba6523e']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war root@142.93.217.213/:/opt/apache-tomcat-9.0.70/webapps/"
}
}
*/

}//try closing
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//node closing

//Function for slack notifications

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}




